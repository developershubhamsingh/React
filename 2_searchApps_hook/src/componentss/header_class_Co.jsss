import React, { Component } from 'react';

class Header extends Component {
    // constructor is the first thing that gets called in the class .
    constructor() {
        // we define state through this keywords and to make   this keyword accessible we have super methods.
        super()
        this.state = {
            titleText: "React Search Application",
            inputBoxText: "search products here !",
            searchText: "Search Text here",
            count: 0,
        }
        this.myStyle = {
            header: {
                // height: "45px",
                backgroundColor: "green",
                textAlign: "center",
            },

            input: {
                border: "none",
                borderRadius: "7px",
                outline: "none",
                textAlign: "center",
                height: "25px",
                margin: "3px"
            }
        }
    }
    handleCount = (event) => {
        // console.log(event)
        this.setState({ count: this.state.count + 1 })
    }

    handleChange = (event) => {
        // console.log(event)
        this.setState({ searchText: event.target.value });
        // this.setState({searchText:event.target.value ?event.target.value :"Search Text here" })
        this.props.searchText(event.target.value);
    }

    render() {
        // console.log("render");
        return (
            <header style={this.myStyle.header}>
                <div id='logo'>{this.state.titleText}</div>
                <input type='text' placeholder={this.state.inputBoxText} onChange={this.handleChange} style={this.myStyle.input} />
                {/* <div className='searchText'> {this.state.searchText}</div> */}
                <div className='searchText'>{this.state.searchText.trim() !== "" ? this.state.searchText : "User text here"}</div>
                {/* {<div>{this.state.count}</div> }
                { <button onClick={this.handleCount}>Counter</button> } */}
            </header>
        )
    }
}

export default Header

// this.state.searchText.trim() !== ""
// üëâ ‡§Ö‡§ó‡§∞ ‡§Ø‡•Ç‡§ú‡§º‡§∞ ‡§®‡•á ‡§ï‡•Å‡§õ ‡§ü‡§æ‡§á‡§™ ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•à (space ‡§õ‡•ã‡§°‡§º‡§ï‡§∞ ‡§≠‡•Ä) ? this.state.searchText
// üëâ ‡§§‡•ã ‡§µ‡§π‡•Ä ‡§ü‡§æ‡§á‡§™ ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•Å‡§Ü ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§¶‡§ø‡§ñ‡§æ‡§ì: "User text here"
// üëâ ‡§µ‡§∞‡§®‡§æ "User text here" ‡§ï‡•ã default ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§ï‡•Ä ‡§§‡§∞‡§π ‡§¶‡§ø‡§ñ‡§æ‡§ì
